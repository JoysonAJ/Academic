<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".MainActivity">



    <EditText
        android:id="@+id/Regno"
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:hint="Register Number"
        android:textAlignment="center"
        android:textSize="25dp"/>

    <EditText
        android:id="@+id/Name"
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:hint="Name"
        android:textAlignment="center"
        android:textSize="25dp"/>

    <EditText
        android:id="@+id/course"
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:hint="COURSE"
        android:textAlignment="center"
        android:textSize="25dp"/>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:orientation="horizontal">

        <Button
            android:id="@+id/Insert"
            android:layout_width="wrap_content"
            android:layout_height="75dp"
            android:layout_weight="1"
            android:text="Insert" />

        <Button
            android:id="@+id/DELETE"
            android:layout_width="wrap_content"
            android:layout_height="74dp"
            android:layout_weight="1"
            android:text="DELETE" />
    </LinearLayout>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:orientation="horizontal">

        <Button
            android:id="@+id/UPDATE"
            android:layout_width="wrap_content"
            android:layout_height="75dp"
            android:layout_weight="1"
            android:text="UPDATE" />

        <Button
            android:id="@+id/READ"
            android:layout_width="wrap_content"
            android:layout_height="74dp"
            android:layout_weight="1"
            android:text="READ" />



    </LinearLayout>

    <EditText
        android:id="@+id/Display"
        android:layout_width="match_parent"
        android:layout_height="114dp"
        android:ems="10"
        android:gravity="start|top"
        android:inputType="textMultiLine" />

    <Button
        android:id="@+id/SharedPref"
        android:layout_width="match_parent"
        android:layout_height="83dp"
        android:text="SHARED Pref" />


</LinearLayout>
=================================================================================================================================

package com.example.a11_shared_sqlite;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.content.SharedPreferences;
import android.database.Cursor;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    Button PrefanceButton;
    SharedPreferences sharedPreferences;

    public static final String SHARED_PREF_NAME = "My_Pref";
    public static final String KEY_REG_NO = "REG_NO";
    public static final String KEY_NAME = "name";


    Button insert, delete, update, read;
    EditText regno, name, course;

    EditText multi;

    dbHelper dbHelper;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        dbHelper = new dbHelper(this);

        regno = findViewById(R.id.Regno);
        name = findViewById(R.id.Name);
        course = findViewById(R.id.course);

        multi = findViewById(R.id.Display);

        insert = findViewById(R.id.Insert);
        delete = findViewById(R.id.DELETE);
        update = findViewById(R.id.UPDATE);
        read = findViewById(R.id.READ);

        insert.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                Boolean data = dbHelper.insert(regno.getText().toString(), name.getText().toString(), course.getText().toString());
                if (data) {
                    Toast.makeText(MainActivity.this, "Inserted", Toast.LENGTH_SHORT).show();
                }

            }
        });

        delete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                int num = Integer.parseInt(regno.getText().toString());
                dbHelper.Delete(num);
            }
        });

        update.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                long result = dbHelper.Update(regno.getText().toString(), name.getText().toString(), course.getText().toString());

                if (result == -1) {
                    Toast.makeText(MainActivity.this, "Not Updated", Toast.LENGTH_SHORT).show();
                } else {
                    Toast.makeText(MainActivity.this, "Updated", Toast.LENGTH_SHORT).show();
                }
            }
        });

        read.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Cursor cursor = dbHelper.fetch();
                String result = " ";
                if (cursor.moveToFirst()) {
                    do {
                        String RegNum = cursor.getString(cursor.getColumnIndexOrThrow("RegisterNumber"));
                        String name = cursor.getString(cursor.getColumnIndexOrThrow("Username"));
                        String course = cursor.getString(cursor.getColumnIndexOrThrow("Course"));
                        String answer = RegNum + " " + name + " " + course + "\n";
                        result = result + " " + answer;
                    } while (cursor.moveToNext());
                }
                multi.setText(result);
            }
        });

//        Shared Pref Logic
        PrefanceButton = findViewById(R.id.SharedPref);

        sharedPreferences = getSharedPreferences(SHARED_PREF_NAME,MODE_PRIVATE);

        PrefanceButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String studentRegno = regno.getText().toString();
                String studentName = name.getText().toString();

                SharedPreferences.Editor editor = sharedPreferences.edit();
                editor.putString(KEY_REG_NO,studentRegno);
                editor.putString(KEY_NAME,studentName);
                editor.commit();
                editor.apply();
                Intent intent = new Intent(MainActivity.this,Second.class);
                startActivity(intent);
            }
        });

    }
}

================================================================================================================================

package com.example.a11_shared_sqlite;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import androidx.annotation.Nullable;

public class dbHelper extends SQLiteOpenHelper {

    public static final String DATABASE = "STUDENT.DB";
    public static final int VERSION = 5;

    public dbHelper(@Nullable Context context) {
        super(context, DATABASE, null, VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        String query = "create table Std (RegisterNumber text  ," +
                "Username text , " +
                " Course text) ";
        db.execSQL(query);

    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("drop table if exists Std");
        onCreate(db);
    }

    public boolean insert(String regNo,String userName,String course){
        ContentValues contentValues = new ContentValues();
        SQLiteDatabase db = getWritableDatabase();
        contentValues.put("RegisterNumber", regNo);
        contentValues.put("Username", userName);
        contentValues.put("Course", course);

        long r = db.insert("Std", null, contentValues);
        if (r == -1) {
            return false;
        } else {
            return true;
        }
    }

    public long Update(String regNo, String userName, String course) {
        ContentValues contentValues = new ContentValues();
        SQLiteDatabase db = getWritableDatabase();
        contentValues.put("RegisterNumber", regNo);
//        contentValues.put("Username", userName);
        contentValues.put("Course", course);
        int result = db.update("Std", contentValues, "RegisterNumber=" + regNo,null);
        return  result;
    }

    public Cursor fetch(){

        SQLiteDatabase db = getWritableDatabase();
        String colums[] = new String[]{"RegisterNumber","Username","Course"};
        Cursor cursor = db.query("std",colums,null,null,null,null,null);
        if (cursor != null){
            cursor.moveToFirst();
        }
        return cursor;
    }

    public void Delete(long _id){
        SQLiteDatabase db = getWritableDatabase();
        db.delete("std","RegisterNumber = " +_id,null);
    }


}



=========================================================================================================================



==========================================================================================================================