
10.	Android App to demonstrate the usage of Internal & External Storage of the Phone.

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">


    <Button
        android:id="@+id/exLoad"
        android:layout_width="182dp"
        android:layout_height="63dp"
        android:text="Load"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.933"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.907" />

    <Button
        android:id="@+id/exStore"
        android:layout_width="180dp"
        android:layout_height="70dp"
        android:text="Save"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.112"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.916" />

    <Button
        android:id="@+id/InterStore"
        android:layout_width="180dp"
        android:layout_height="68dp"
        android:text="Storage"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.069"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.196" />

    <Button
        android:id="@+id/interLoad"
        android:layout_width="182dp"
        android:layout_height="68dp"
        android:layout_marginStart="228dp"
        android:text="Load"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.196" />

    <TextView
        android:id="@+id/textView"
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:text="External  Storage"
        android:textAlignment="center"
        android:textSize="25dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.711"
        tools:layout_editor_absoluteX="0dp" />

    <EditText
        android:id="@+id/textInput"
        android:layout_width="402dp"
        android:layout_height="79dp"
        android:textAlignment="center"
        android:textSize="25dp"
        android:hint="add text"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        tools:layout_editor_absoluteX="9dp" />

    <TextView
        android:id="@+id/textView2"
        android:layout_width="match_parent"
        android:layout_height="56dp"
        android:text="Internal Storage"
        android:textAlignment="center"
        android:textSize="25dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.042"
        tools:layout_editor_absoluteX="16dp" />

</androidx.constraintlayout.widget.ConstraintLayout>

 


â€ƒ

package com.example.a10_internal_and_extenal;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

import android.Manifest;
import android.content.Context;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;

public class MainActivity extends AppCompatActivity {
    Button internalSave, internalLoad, externalSave, externalLoad;
    EditText inputText;

    String INTERNAL_FILE = "Internal.txt";

    String EXTERNAL_FILE = "External.txt";
    String FILE_PATH = "Mydir";



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        inputText = findViewById(R.id.textInput);

        internalSave = findViewById(R.id.InterStore);
        internalLoad = findViewById(R.id.interLoad);

        externalLoad = findViewById(R.id.exLoad);
        externalSave = findViewById(R.id.exStore);


//        Internal Storage location
//        /data/data/com.example.a10_internal_and_extenal/files/Internal.txt
        internalSave.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String text = inputText.getText().toString();
                try {
                    FileOutputStream fileOutputStream = openFileOutput(INTERNAL_FILE, MODE_PRIVATE);
                    fileOutputStream.write(text.getBytes());
                    inputText.getText().clear();
                    Toast.makeText(MainActivity.this, "Saved", Toast.LENGTH_LONG).show();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });

        internalLoad.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                try {
                    FileInputStream fileInputStream = openFileInput(INTERNAL_FILE);
                    InputStreamReader inputStreamReader = new InputStreamReader(fileInputStream);
                    BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
                    String text = "";
                    StringBuilder builderText = new StringBuilder();
                    while ((text = bufferedReader.readLine()) != null) {
                        builderText.append(text);
                    }
                    inputText.setText(builderText.toString());
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        externalSave.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                if (checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                    requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.READ_EXTERNAL_STORAGE}, 123);
                }

                File file = new File(getExternalFilesDir(FILE_PATH), EXTERNAL_FILE);

                String text = inputText.getText().toString();
                FileOutputStream fileOutputStream = null;
                try {
                    fileOutputStream = new FileOutputStream(file);
                    fileOutputStream.write(text.getBytes());
                    inputText.getText().clear();
                    Toast.makeText(MainActivity.this, "Saved", Toast.LENGTH_LONG).show();
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        externalLoad.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (ContextCompat.checkSelfPermission(MainActivity.this, (Manifest.permission.READ_EXTERNAL_STORAGE)) != PackageManager.PERMISSION_GRANTED) {
                    ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.READ_EXTERNAL_STORAGE,Manifest.permission.WRITE_EXTERNAL_STORAGE,}, 0);
                }
                File file = new File(getExternalFilesDir(FILE_PATH), EXTERNAL_FILE);

                FileInputStream fileInputStream = null;
                try {
                    fileInputStream = new FileInputStream(file);
                    InputStreamReader inputStreamReader = new InputStreamReader(fileInputStream);
                    BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
                    String text = "";
                    StringBuilder builderText = new StringBuilder();
                    while ((text = bufferedReader.readLine()) != null) {
                        builderText.append(text);
                    }
                    inputText.setText(builderText.toString());
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
    }
}

================================================================================================================================

11 Android App to demonstrate the use of Shared Preferences & SQLite by performing CRUD operations.

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".MainActivity">



    <EditText
        android:id="@+id/Regno"
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:hint="Register Number"
        android:textAlignment="center"
        android:textSize="25dp"/>

    <EditText
        android:id="@+id/Name"
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:hint="Name"
        android:textAlignment="center"
        android:textSize="25dp"/>

    <EditText
        android:id="@+id/course"
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:hint="COURSE"
        android:textAlignment="center"
        android:textSize="25dp"/>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:orientation="horizontal">

        <Button
            android:id="@+id/Insert"
            android:layout_width="wrap_content"
            android:layout_height="75dp"
            android:layout_weight="1"
            android:text="Insert" />

        <Button
            android:id="@+id/DELETE"
            android:layout_width="wrap_content"
            android:layout_height="74dp"
            android:layout_weight="1"
            android:text="DELETE" />
    </LinearLayout>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:orientation="horizontal">

        <Button
            android:id="@+id/UPDATE"
            android:layout_width="wrap_content"
            android:layout_height="75dp"
            android:layout_weight="1"
            android:text="UPDATE" />

        <Button
            android:id="@+id/READ"
            android:layout_width="wrap_content"
            android:layout_height="74dp"
            android:layout_weight="1"
            android:text="READ" />



    </LinearLayout>

    <EditText
        android:id="@+id/Display"
        android:layout_width="match_parent"
        android:layout_height="114dp"
        android:ems="10"
        android:gravity="start|top"
        android:inputType="textMultiLine" />

    <Button
        android:id="@+id/SharedPref"
        android:layout_width="match_parent"
        android:layout_height="83dp"
        android:text="SHARED Pref" />


</LinearLayout>

 
â€ƒ
MainActivity.java

package com.example.a11_shared_sqlite;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.content.SharedPreferences;
import android.database.Cursor;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    Button PrefanceButton;
    SharedPreferences sharedPreferences;

    public static final String SHARED_PREF_NAME = "My_Pref";
    public static final String KEY_REG_NO = "REG_NO";
    public static final String KEY_NAME = "name";


    Button insert, delete, update, read;
    EditText regno, name, course;

    EditText multi;

    dbHelper dbHelper;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        dbHelper = new dbHelper(this);

        regno = findViewById(R.id.Regno);
        name = findViewById(R.id.Name);
        course = findViewById(R.id.course);

        multi = findViewById(R.id.Display);

        insert = findViewById(R.id.Insert);
        delete = findViewById(R.id.DELETE);
        update = findViewById(R.id.UPDATE);
        read = findViewById(R.id.READ);

        insert.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                Boolean data = dbHelper.insert(regno.getText().toString(), name.getText().toString(), course.getText().toString());
                if (data) {
                    Toast.makeText(MainActivity.this, "Inserted", Toast.LENGTH_SHORT).show();
                }

            }
        });

        delete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                int num = Integer.parseInt(regno.getText().toString());
                dbHelper.Delete(num);
            }
        });

        update.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                long result = dbHelper.Update(regno.getText().toString(), name.getText().toString(), course.getText().toString());

                if (result == -1) {
                    Toast.makeText(MainActivity.this, "Not Updated", Toast.LENGTH_SHORT).show();
                } else {
                    Toast.makeText(MainActivity.this, "Updated", Toast.LENGTH_SHORT).show();
                }
            }
        });

        read.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Cursor cursor = dbHelper.fetch();
                String result = " ";
                if (cursor.moveToFirst()) {
                    do {
                        String RegNum = cursor.getString(cursor.getColumnIndexOrThrow("RegisterNumber"));
                        String name = cursor.getString(cursor.getColumnIndexOrThrow("Username"));
                        String course = cursor.getString(cursor.getColumnIndexOrThrow("Course"));
                        String answer = RegNum + " " + name + " " + course + "\n";
                        result = result + " " + answer;
                    } while (cursor.moveToNext());
                }
                multi.setText(result);
            }
        });

//        Shared Pref Logic
        PrefanceButton = findViewById(R.id.SharedPref);

        sharedPreferences = getSharedPreferences(SHARED_PREF_NAME,MODE_PRIVATE);

        PrefanceButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String studentRegno = regno.getText().toString();
                String studentName = name.getText().toString();

                SharedPreferences.Editor editor = sharedPreferences.edit();
                editor.putString(KEY_REG_NO,studentRegno);
                editor.putString(KEY_NAME,studentName);
                editor.commit();
                editor.apply();
                Intent intent = new Intent(MainActivity.this,Second.class);
                startActivity(intent);
            }
        });

    }
}



_____________________________________________________________________________________

dbHelper.java
package com.example.a11_shared_sqlite;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import androidx.annotation.Nullable;

public class dbHelper extends SQLiteOpenHelper {

    public static final String DATABASE = "STUDENT.DB";
    public static final int VERSION = 5;

    public dbHelper(@Nullable Context context) {
        super(context, DATABASE, null, VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        String query = "create table Std (RegisterNumber text  ," +
                "Username text , " +
                " Course text) ";
        db.execSQL(query);

    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("drop table if exists Std");
        onCreate(db);
    }

    public boolean insert(String regNo,String userName,String course){
        ContentValues contentValues = new ContentValues();
        SQLiteDatabase db = getWritableDatabase();
        contentValues.put("RegisterNumber", regNo);
        contentValues.put("Username", userName);
        contentValues.put("Course", course);

        long r = db.insert("Std", null, contentValues);
        if (r == -1) {
            return false;
        } else {
            return true;
        }
    }

    public long Update(String regNo, String userName, String course) {
        ContentValues contentValues = new ContentValues();
        SQLiteDatabase db = getWritableDatabase();
        contentValues.put("RegisterNumber", regNo);
//        contentValues.put("Username", userName);
        contentValues.put("Course", course);
        int result = db.update("Std", contentValues, "RegisterNumber=" + regNo,null);
        return  result;
    }

    public Cursor fetch(){

        SQLiteDatabase db = getWritableDatabase();
        String colums[] = new String[]{"RegisterNumber","Username","Course"};
        Cursor cursor = db.query("std",colums,null,null,null,null,null);
        if (cursor != null){
            cursor.moveToFirst();
        }
        return cursor;
    }

    public void Delete(long _id){
        SQLiteDatabase db = getWritableDatabase();
        db.delete("std","RegisterNumber = " +_id,null);
    }


}

â€ƒ
activity_second.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:gravity="center"
    android:orientation="vertical"
    tools:context=".Second">

    <EditText
        android:id="@+id/number"
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:textAlignment="center"
        android:textSize="25dp"/>
    <EditText
        android:id="@+id/nameS"
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:textAlignment="center"
        android:textSize="25dp"/>

    <Button
        android:id="@+id/logout"
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:text="Logout"/>

</LinearLayout>

  

Second.java
package com.example.a11_shared_sqlite;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

public class Second extends AppCompatActivity {
    EditText regno, name;
    Button logout;

    SharedPreferences sharedPreferences;

    public static final String SHARED_PREF_NAME = "My_Pref";
    public static final String KEY_REG_NO = "REG_NO";
    public static final String KEY_NAME = "name";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_second);

        regno = findViewById(R.id.number);
        name = findViewById(R.id.nameS);
        logout = findViewById(R.id.logout);

        sharedPreferences = getSharedPreferences(SHARED_PREF_NAME, MODE_PRIVATE);

        String strRegno = sharedPreferences.getString(KEY_REG_NO, null);
        String strName = sharedPreferences.getString(KEY_NAME, null);

        name.setText(strName);
        regno.setText(strRegno);

        logout.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                SharedPreferences.Editor editor = sharedPreferences.edit();
                editor.clear();
                editor.commit();
                Intent intent = new Intent(Second.this, MainActivity.class);
                startActivity(intent);
            }
        });
    }
}
â€ƒ
===================================================================================================================================

12 Android App to demonstrate the concept of Background Threads.

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/btnDownload"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="10dp"

        android:text="Download the image" />

    <TextView
        android:id="@+id/tvProgress"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="10dp"
        android:text="Please wait whil;e we get the image" />

    <ImageView
        android:id="@+id/image_logo"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="30dp"
        tools:srcCompat="@tools:sample/avatars" />

</LinearLayout>



 




â€ƒ
package com.example.a12_backgroun_thread;

import androidx.appcompat.app.AppCompatActivity;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.AsyncTask;
import android.os.Bundle;
import android.speech.tts.TextToSpeech;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.channels.AsynchronousChannelGroup;

public class MainActivity extends AppCompatActivity {
    TextView progressBar;
    ImageView imageView;
    Button DownLoadBtn;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        progressBar = findViewById(R.id.tvProgress);
        imageView = findViewById(R.id.image_logo);
        DownLoadBtn = findViewById(R.id.btnDownload);

        progressBar.setVisibility(View.INVISIBLE);

        DownLoadBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                downloadImageClass imageClass = new downloadImageClass();
                imageClass.execute("https://sac-aimit.in/alogo.png");
            }
        });
    }

    class downloadImageClass extends AsyncTask<String, Integer, Bitmap> {

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            progressBar.setVisibility(View.VISIBLE);
        }

        @Override
        protected void onPostExecute(Bitmap bitmap) {
            super.onPostExecute(bitmap);
            imageView.setImageBitmap(bitmap);
            progressBar.setVisibility(View.INVISIBLE);
        }

        @Override
        protected void onProgressUpdate(Integer... values) {
            super.onProgressUpdate(values);
            progressBar.setText("Download" + values[0] + "%");
        }

        @Override
        protected Bitmap doInBackground(String... strings) {
            Bitmap bmp = null;
            try {
                URL imageURL = new URL(strings[0]);
                publishProgress(25);

                HttpURLConnection connection = (HttpURLConnection) imageURL.openConnection();
                publishProgress(50);

                InputStream inputStream = connection.getInputStream();
                publishProgress(75);

                bmp = BitmapFactory.decodeStream(inputStream);
                publishProgress(100);
            } catch (MalformedURLException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return bmp;
        }
    }
}




